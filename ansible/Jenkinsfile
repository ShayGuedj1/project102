pipeline {
    agent any

    environment {
        // Define environment variables.
        ANSIBLE_PLAYBOOK_SERVICES = 'ansible/install-services.yaml'
        ANSIBLE_PLAYBOOK_WEB = 'ansible/install-website.yaml'
        PRIVATE_KEY_PATH = '/home/new_home/.ssh/master'
        IPS_FILE_PATH = '/home/new_home/inventory.yaml'

    }

    stages {

        /*stage('Read Inventory File') {
            steps {
                sh 'echo $HOME'
                sh 'cd ${HOME}'
                sh 'pwd'
                sh 'sleep 5'
                script {
                    // Read contents of inventory file into IPS_FILE_PATH variable
                    IPS_FILE_PATH = sh(script: 'cat /home/new_home/inventory', returnStdout: true).trim()
                }
            }
        }*/

        stage('Run Ansible Playbook- services') {
            steps {
                sh 'echo $HOME'
                sh 'cd ${HOME}'
                sh "sudo ansible-playbook -i ${IPS_FILE_PATH} ${ANSIBLE_PLAYBOOK_SERVICES} -u ubuntu"
            }
        }
        

        stage('Run Ansible Playbook- web') {
            steps {
                    sh "sudo ansible-playbook -i ${IPS_FILE_PATH} ${ANSIBLE_PLAYBOOK_WEB} -u ubuntu"
            }
        }
    }
    post {
        always {
            cleanWs() // Clean up the workspace
        }

        success {
            echo 'Pipeline succeeded!'
            sh 'sleep 300'
            script {
                // Destroy Terraform resources
                sh 'terraform destroy -auto-approve'
            }
        }

        failure {
            echo 'Pipeline failed! Destroying Terraform resources...'
            script {
                // Destroy Terraform resources
                sh 'terraform destroy -auto-approve'
            }
        }

        cleanup {
            echo 'Cleanup stage: always executed'
        }
    }
}
